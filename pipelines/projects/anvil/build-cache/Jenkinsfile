// Jenkinsfile for building anvil cache

@Library(['GlobalLib', 'ProjectLib']) _

// Globals
def project = 'anvil'
def info = ['project': project]

String[] distros = ['almalinux-9', 'rhel-9']

pipeline {
    agent { label 'built-in' }

    options {
	skipDefaultCheckout(true)
    }

    stages {
	stage('Initialisation') {
	    steps {
		println('Initialising variables')
		getBuildInfoCommon(info)
	    }
	}
	stage('Update cache matrix') {

	    matrix {
		agent {
		    label "${PLATFORM}"
		}
		axes {
		    axis {
			name 'PLATFORM'
			values 'anvil-ci-bm-phy02', 'anvil-ci-bm-phy03', 'anvil-ci-bm-phy04', 'anvil-ci-bm-phy05', 'anvil-ci-bm-phy06', 'anvil-ci-bm-phy07'
		    }
	        }

		stages('Update cache node') {
		    stage('Update cache') {
			steps {
			    script {
				stage("Prep build env ${PLATFORM}") {
				    cleanWs(disableDeferredWipeout: true, deleteDirs: true)
				    sh """
					$HOME/ci-tools/ci-destroy-anvil-bm-vm
				    """
			    	}
				for (distro in distros) {
				    info['state'] = 'success'
				    stage("Build cache ${PLATFORM} ${distro}") {
					try {
					    sh """
						$HOME/ci-tools/ci-setup-anvil-bm-vm-cache ${distro} none none
					    """
					}
					catch(err) {
					    info['state'] = 'failure'
					}
					info['branch'] = "cache ${PLATFORM} ${distro}"
					projectFinishUp(info)
				    }
				}
				stage("Clean build env ${PLATFORM}") {
				    cleanWs(disableDeferredWipeout: true, deleteDirs: true)
				    sh """
					$HOME/ci-tools/ci-destroy-anvil-bm-vm
				    """
				}
			    }
			}
		    }
		}
	    }
	}
    }
}
